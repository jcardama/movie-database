apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 29
  buildToolsVersion '29.0.0'

  dexOptions {
    maxProcessCount 4
    preDexLibraries false
    javaMaxHeapSize "8g"
  }

  defaultConfig {
    applicationId "com.jcardama.inspeccion"
    minSdkVersion 19
    targetSdkVersion 29
    versionCode 1000000
    // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
    versionName "1.0.0"
    testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
    multiDexEnabled true
  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      renderscriptDebuggable false
      pseudoLocalesEnabled true
      zipAlignEnabled true
    }
    debug {
      versionNameSuffix " PRE-RELEASE"
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      renderscriptDebuggable true
      pseudoLocalesEnabled true
      zipAlignEnabled true
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'LICENSE.txt'
    exclude 'META-INF/license/LICENSE.base64.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/rxjava.properties'
    exclude 'META-INF/MANIFEST.MF'
  }

  lintOptions {
    textOutput "stdout"
    textReport true
    checkAllWarnings true
    warningsAsErrors true
    showAll true
    explainIssues true
    abortOnError false
    lintConfig file("$projectDir/lint.xml")
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    def commonTestDir = 'src/commonTest/kotlin'
    test {
      java.srcDir commonTestDir
    }
    androidTest {
      java.srcDir commonTestDir
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  testOptions {
    unitTests {
      returnDefaultValues = true
    }
  }

  dataBinding {
    enabled = true
  }

  androidExtensions {
    experimental = true
  }

  compileOptions {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }
}

kapt {
  correctErrorTypes = true
  generateStubs = true
}

configurations.all {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    def requested = details.requested
    if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
      details.useVersion kotlin_version
    }
  }
}

dependencies {
  final COROUTINES_VERSION = '1.0.1'

  final LIFECYCLE_VERSION = '2.2.0-alpha03'

  final MATERIAL_VERSION = '1.1.0-alpha09'
  final APPCOMPAT_VERSION = '1.1.0-rc01'
  final CARDVIEW_VERSION = '1.0.0'
  final RECYCLERVIEW_VERSION = '1.1.0-beta02'
  final CONSTRAINT_LAYOUT_VERSION = '1.1.3'

  final RETROFIT_VERSION = '2.6.0'
  final LOGGING_INTERCEPTOR_VERSION = '4.0.1'

  final DAGGER_VERSION = '2.24'

  final GSON_VERSION = '2.8.5'

  final ROOM_VERSION = '2.1.0-alpha04'

  final GLIDE_VERSION = '4.9.0'

  final TIMBER_VERSION = '4.7.1'

  final LEAK_CANARY_VERSION = '1.6.3'

  final STETHO_VERSION = '1.5.1'

  //Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$COROUTINES_VERSION"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$COROUTINES_VERSION"

  //Lifecycle
  implementation "androidx.lifecycle:lifecycle-extensions:$LIFECYCLE_VERSION"
  implementation "androidx.lifecycle:lifecycle-reactivestreams:$LIFECYCLE_VERSION"
  implementation "androidx.lifecycle:lifecycle-common-java8:$LIFECYCLE_VERSION"

  //Support libraries
  implementation "com.google.android.material:material:$MATERIAL_VERSION"
  implementation "androidx.appcompat:appcompat:$APPCOMPAT_VERSION"
  implementation "androidx.cardview:cardview:$CARDVIEW_VERSION"
  implementation "androidx.recyclerview:recyclerview:$RECYCLERVIEW_VERSION"
  implementation "androidx.constraintlayout:constraintlayout:$CONSTRAINT_LAYOUT_VERSION"

  //Dagger
  kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
  kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
  implementation "com.google.dagger:dagger:$DAGGER_VERSION"
  implementation "com.google.dagger:dagger-android:$DAGGER_VERSION"
  implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"

  //Retrofit
  implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
  implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
  implementation "com.squareup.okhttp3:logging-interceptor:$LOGGING_INTERCEPTOR_VERSION"

  //Google
  implementation "com.google.code.gson:gson:$GSON_VERSION"

  //Room
  implementation "androidx.room:room-runtime:$ROOM_VERSION"
  kapt "androidx.room:room-compiler:$ROOM_VERSION"
  implementation"androidx.room:room-coroutines:$ROOM_VERSION"

  //Glide
  implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
  annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE_VERSION"

  //Timber
  implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"

  //Stetho
  implementation "com.facebook.stetho:stetho:$STETHO_VERSION"

  //Leak Canary
  debugImplementation "com.squareup.leakcanary:leakcanary-android:$LEAK_CANARY_VERSION"
  releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$LEAK_CANARY_VERSION"
  testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$LEAK_CANARY_VERSION"

  //TEST
  testImplementation "junit:junit:4.12"
  androidTestImplementation "androidx.test:runner:1.2.0"
  androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
  testImplementation "org.mockito:mockito-inline:3.0.0"
  implementation "androidx.arch.core:core-testing:2.0.1"
  implementation "com.nhaarman:mockito-kotlin-kt1.1:1.6.0"
}

tasks.matching { it instanceof Test }.all {
  testLogging.events = ["failed", "passed", "skipped"]
}
